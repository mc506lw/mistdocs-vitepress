import{_ as s,c as e,a3 as a,o as n}from"./chunks/framework.BP-s_cs7.js";const c=JSON.parse('{"title":"Server Administration Regulations","description":"","frontmatter":{},"headers":[],"relativePath":"en-US/docs/other/team/rule.md","filePath":"en-US/docs/other/team/rule.md","lastUpdated":null}'),t={name:"en-US/docs/other/team/rule.md"};function l(o,i,r,h,p,d){return n(),e("div",null,i[0]||(i[0]=[a(`<h1 id="server-administration-regulations" tabindex="-1">Server Administration Regulations <a class="header-anchor" href="#server-administration-regulations" aria-label="Permalink to &quot;Server Administration Regulations&quot;">​</a></h1><h2 id="chapter-1-general-provisions" tabindex="-1">Chapter 1: General Provisions <a class="header-anchor" href="#chapter-1-general-provisions" aria-label="Permalink to &quot;Chapter 1: General Provisions&quot;">​</a></h2><ul><li>Article 1: These regulations aim to standardize the behavior of server administrators, protect the rights and interests of players, and maintain a harmonious and stable gaming environment.</li><li>Article 2: Administrators should abide by these regulations, respect and protect the legitimate rights and interests of players, and perform management duties fairly and impartially.</li></ul><h2 id="chapter-2-duties-and-rights-of-administrators" tabindex="-1">Chapter 2: Duties and Rights of Administrators <a class="header-anchor" href="#chapter-2-duties-and-rights-of-administrators" aria-label="Permalink to &quot;Chapter 2: Duties and Rights of Administrators&quot;">​</a></h2><ul><li>Article 3: Administrators have the right to warn, mute, kick, and ban players who violate game rules.</li><li>Article 4: Administrators are responsible for regularly patrolling the server to ensure its normal operation and address issues reported by players in a timely manner.</li><li>Article 5: Administrators have the right to participate in the planning and construction of the server and propose suggestions for improvement.</li></ul><h2 id="chapter-3-code-of-conduct-for-administrators" tabindex="-1">Chapter 3: Code of Conduct for Administrators <a class="header-anchor" href="#chapter-3-code-of-conduct-for-administrators" aria-label="Permalink to &quot;Chapter 3: Code of Conduct for Administrators&quot;">​</a></h2><ul><li>Article 6: Administrators must not abuse their authority and impose unwarranted penalties on players.</li><li>Article 7: Administrators must not disclose players&#39; personal information.</li><li>Article 8: Administrators must not use their positions to seek improper benefits for themselves or others.</li><li>Article 9: Administrators must not engage in any form of advertising within the game.</li></ul><h2 id="chapter-4-handling-of-administrators-who-violate-these-regulations" tabindex="-1">Chapter 4: Handling of Administrators Who Violate These Regulations <a class="header-anchor" href="#chapter-4-handling-of-administrators-who-violate-these-regulations" aria-label="Permalink to &quot;Chapter 4: Handling of Administrators Who Violate These Regulations&quot;">​</a></h2><ul><li>Article 10: Administrators who violate these regulations will be warned, stripped of their administrative privileges, or have their accounts banned.</li><li>Article 11: For administrators who seriously violate these regulations and cause a severe impact, permanent bans will be imposed, and legal liability may be pursued.</li></ul><h2 id="chapter-5-supplementary-provisions" tabindex="-1">Chapter 5: Supplementary Provisions <a class="header-anchor" href="#chapter-5-supplementary-provisions" aria-label="Permalink to &quot;Chapter 5: Supplementary Provisions&quot;">​</a></h2><ul><li>Article 12: These regulations are enforced as of the date of their publication. Any matters not covered will be interpreted by senior management.</li></ul><h2 id="customer-service-work-responsibilities" tabindex="-1">Customer Service Work Responsibilities <a class="header-anchor" href="#customer-service-work-responsibilities" aria-label="Permalink to &quot;Customer Service Work Responsibilities&quot;">​</a></h2><ol><li><p><strong>Player Support</strong>:</p><ul><li>Answer questions and resolve issues players encounter during the game through online chat, QQ, etc.</li><li>Provide technical support, guide players in solving game installation, login, connection, and other technical issues.</li><li>Record common player issues, write FAQ documents to improve service efficiency.</li></ul></li><li><p><strong>Issue Resolution</strong>:</p><ul><li>Handle player complaints and feedback promptly, analyze the root causes, and provide effective solutions.</li><li>Coordinate with the technical team to ensure that technical issues are resolved quickly.</li><li>Track issue resolution progress to ensure players&#39; problems are completely resolved and feedback is provided.</li></ul></li><li><p><strong>Community Management</strong>:</p><ul><li>Maintain a harmonious atmosphere on the server, manage and supervise players&#39; behavior both in and out of the game, and ensure compliance with server rules.</li><li>Handle disputes between players, mediate conflicts to ensure a fair and friendly gaming environment.</li><li>Regularly patrol game servers to detect and address violations.</li></ul></li><li><p><strong>Information Collection</strong>:</p><ul><li>Collect players&#39; suggestions and opinions, organize and feedback to the management team to optimize the gaming experience.</li><li>Analyze player feedback data, propose suggestions for improvement, and assist in enhancing server service quality.</li><li>Participate in player surveys to understand player needs and satisfaction, and develop improvement plans.</li></ul></li></ol><h3 id="event-planning-work-responsibilities" tabindex="-1">Event Planning Work Responsibilities <a class="header-anchor" href="#event-planning-work-responsibilities" aria-label="Permalink to &quot;Event Planning Work Responsibilities&quot;">​</a></h3><ol><li><p><strong>Event Design and Planning</strong></p><ul><li>Design and plan various interesting and challenging game events, including but not limited to competitions, adventures, building contests, etc.</li><li>Ensure events are innovative and enjoyable, attracting players of all types to participate.</li></ul></li><li><p><strong>Event Implementation and Management</strong></p><ul><li>Develop detailed event plans and schedules to ensure events proceed as planned.</li><li>Organize and coordinate all aspects of events to ensure smooth execution.</li><li>Monitor event progress in real-time and promptly resolve issues that arise during events.</li></ul></li><li><p><strong>Player Interaction and Feedback</strong></p><ul><li>Actively interact with players to understand their needs and suggestions.</li><li>Collect event feedback, analyze event effectiveness, and continuously optimize and improve event content.</li></ul></li><li><p><strong>Promotion and Publicity</strong></p><ul><li>Develop event promotion plans through in-server announcements, Bilibili, and other channels.</li><li>Create promotional materials such as posters and videos to attract more players to participate.</li></ul></li><li><p><strong>Data Analysis and Reporting</strong></p><ul><li>Record and analyze event data to evaluate event effectiveness.</li><li>Regularly write event summary reports and propose suggestions for improvement.</li></ul></li></ol><h2 id="official-website-maintenance-requirements" tabindex="-1">Official Website Maintenance Requirements <a class="header-anchor" href="#official-website-maintenance-requirements" aria-label="Permalink to &quot;Official Website Maintenance Requirements&quot;">​</a></h2><p>Must be proficient in using git and uploading to GitHub.</p><p>Must be proficient in writing with Markdown.</p><p>Please read the <a href="http://yizhan.wiki/NitWikit/writing" target="_blank" rel="noreferrer">Nitwikit Writing Standards</a> to write tutorials and other content for the official website.</p><h2 id="server-plugin-writing-standards" tabindex="-1">Server Plugin Writing Standards <a class="header-anchor" href="#server-plugin-writing-standards" aria-label="Permalink to &quot;Server Plugin Writing Standards&quot;">​</a></h2><h4 id="_1-coding-standards" tabindex="-1">1. Coding Standards <a class="header-anchor" href="#_1-coding-standards" aria-label="Permalink to &quot;1. Coding Standards&quot;">​</a></h4><ul><li><p><strong>Naming Conventions</strong>:</p><ul><li>Class names use PascalCase (e.g., <code>MyPlugin</code>).</li><li>Method names and variable names use camelCase (e.g., <code>getPlayerName</code>).</li><li>Constant names use ALL_CAPS_WITH_UNDERSCORES (e.g., <code>MAX_PLAYERS</code>).</li></ul></li><li><p><strong>Comments</strong>:</p><ul><li>Classes and methods must have Javadoc comments.</li><li>Complex logic should have inline comments.</li></ul></li></ul><h4 id="_2-logging" tabindex="-1">2. Logging <a class="header-anchor" href="#_2-logging" aria-label="Permalink to &quot;2. Logging&quot;">​</a></h4><ul><li>Use the <code>getLogger()</code> method to record logs.<div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;XX plugin has been loaded&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div></li></ul><h4 id="_3-plugin-dependencies" tabindex="-1">3. Plugin Dependencies <a class="header-anchor" href="#_3-plugin-dependencies" aria-label="Permalink to &quot;3. Plugin Dependencies&quot;">​</a></h4><ul><li>Declare plugin dependencies in <code>plugin.yml</code>:<div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">depend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Dependency Plugin Name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div></li></ul><h4 id="_4-testing-and-debugging" tabindex="-1">4. Testing and Debugging <a class="header-anchor" href="#_4-testing-and-debugging" aria-label="Permalink to &quot;4. Testing and Debugging&quot;">​</a></h4><ul><li>Test thoroughly on a local server to ensure the plugin is error-free.</li><li>Use <code>System.out.println</code> or logging for debugging.</li></ul><h4 id="_5-publish-to-github" tabindex="-1">5. Publish to GitHub <a class="header-anchor" href="#_5-publish-to-github" aria-label="Permalink to &quot;5. Publish to GitHub&quot;">​</a></h4><p>Please use GitHub Desktop to publish (if you know git, you can ignore this)</p><p><em><strong>May require a tool to assist with internet access</strong></em></p><ol><li><p><strong>Create a GitHub Repository</strong>:</p><ul><li>Log in to GitHub and create a new repository.</li><li>When initializing the repository, you can choose to add a README.md and .gitignore file (select the Java template).</li></ul></li><li><p><strong>Clone the Repository to Local</strong>:</p><ul><li>Open GitHub Desktop.</li><li>Click &quot;File&quot; &gt; &quot;Clone repository&quot;.</li><li>Select the repository you just created and clone it to your local machine.</li></ul></li><li><p><strong>Add Project Files to Local Repository</strong>:</p><ul><li>Copy your plugin project files into the local cloned repository directory.</li></ul></li><li><p><strong>Commit and Push Code</strong>:</p><ul><li>In GitHub Desktop, add all changes.</li><li>Enter a commit message (e.g., &quot;Initial commit&quot;).</li><li>Click &quot;Commit to main&quot;.</li><li>Click &quot;Push origin&quot; to push the code to the GitHub remote repository.</li></ul></li><li><p><strong>Release a Version</strong>:</p><ul><li>On the GitHub repository page, click the &quot;Releases&quot; tab.</li><li>Click the &quot;Draft a new release&quot; button.</li><li>Enter the version number (e.g., <code>v1.0.0</code>), title, and description.</li><li>Upload the plugin JAR file generated by Maven packaging.</li><li>Click the &quot;Publish release&quot; button to publish the new version.</li></ul></li><li><p><strong>Write a README File</strong></p></li></ol><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;"># MyPlugin</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MyPlugin is a plugin for the Lanyu Minecraft server that provides some useful features.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">---</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">## Feature Introduction</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Feature 1: Describe the function of Feature 1.</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Feature 2: Describe the function of Feature 2.</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Feature 3: Describe the function of Feature 3.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">## Installation</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">1.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Download the latest version of the plugin JAR file.</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">2.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Place the JAR file in the </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\`plugins\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> directory of the server.</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">3.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Restart the server.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">## Usage</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">### Commands</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">The plugin provides the following commands:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \`/mycommand\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> - Execute a specific function.</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">   -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;"> **Usage**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\`/mycommand &lt;parameter&gt;\`</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">   -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;"> **Example**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\`/mycommand example\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">### Permissions</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">The plugin uses the following permissions:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \`myplugin.use\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> - Allows use of basic plugin features.</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">   -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;"> **Default**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: All players</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \`myplugin.admin\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> - Allows use of admin features.</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">   -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;"> **Default**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: Administrators only</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">### Configuration</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">The plugin supports the following configuration options:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\`\`\`yaml</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># config.yml</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">option1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">value1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">option2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">value2</span></span></code></pre></div><ol start="7"><li><strong>API Writing Standards</strong></li></ol><h4 id="_1-method-design" tabindex="-1">1. Method Design <a class="header-anchor" href="#_1-method-design" aria-label="Permalink to &quot;1. Method Design&quot;">​</a></h4><ul><li><strong>Method Signature</strong>: Method names should clearly describe their function and avoid ambiguity.</li><li><strong>Parameters</strong>: The parameter list should be as concise as possible, using object encapsulation for multiple parameters when necessary.</li><li><strong>Return Value</strong>: The return value type should be clear, avoiding vague types (e.g., <code>Object</code>).</li></ul><h4 id="_2-javadoc-comments" tabindex="-1">2. Javadoc Comments <a class="header-anchor" href="#_2-javadoc-comments" aria-label="Permalink to &quot;2. Javadoc Comments&quot;">​</a></h4><p>Each API method should have detailed Javadoc comments, including the following information:</p><ul><li><strong>Method Description</strong>: A brief description of the method&#39;s function.</li><li><strong>Parameters</strong>: Use the <code>@param</code> tag to describe each parameter.</li><li><strong>Return Value</strong>: Use the <code>@return</code> tag to describe the return value.</li><li><strong>Exceptions</strong>: Use the <code>@throws</code> tag to describe possible exceptions.</li></ul><p>Example:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Get the name of the player.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> playerId</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Player ID</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Player name</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@throws</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PlayerNotFoundException</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> If the player cannot be found</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPlayerName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String playerId) throws PlayerNotFoundException {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     // Method implementation</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="_3-exception-handling" tabindex="-1">3. Exception Handling <a class="header-anchor" href="#_3-exception-handling" aria-label="Permalink to &quot;3. Exception Handling&quot;">​</a></h4><ul><li><strong>Custom Exceptions</strong>: For specific error situations, define custom exception classes (e.g., <code>PlayerNotFoundException</code>).</li><li><strong>Throwing Exceptions</strong>: Declare possible exceptions in the method signature and throw them at appropriate places within the method.</li></ul><p>Example:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PlayerNotFoundException</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Exception</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PlayerNotFoundException</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">         super</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(message);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,45)]))}const k=s(t,[["render",l]]);export{c as __pageData,k as default};
