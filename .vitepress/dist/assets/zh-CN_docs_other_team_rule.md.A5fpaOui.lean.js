import{_ as s,c as a,a3 as l,o as n}from"./chunks/framework.BP-s_cs7.js";const g=JSON.parse('{"title":"管理员条例","description":"","frontmatter":{},"headers":[],"relativePath":"zh-CN/docs/other/team/rule.md","filePath":"zh-CN/docs/other/team/rule.md","lastUpdated":1726052843000}'),t={name:"zh-CN/docs/other/team/rule.md"};function h(e,i,p,k,r,o){return n(),a("div",null,i[0]||(i[0]=[l(`<h1 id="管理员条例" tabindex="-1">管理员条例 <a class="header-anchor" href="#管理员条例" aria-label="Permalink to &quot;管理员条例&quot;">​</a></h1><h2 id="第一章-总则" tabindex="-1">第一章：总则 <a class="header-anchor" href="#第一章-总则" aria-label="Permalink to &quot;第一章：总则&quot;">​</a></h2><ul><li>第 1 条：本条例旨在规范服务器管理员的行为，保护玩家的权益，维护游戏环境的和谐稳定。</li><li>第 2 条：管理员应遵守本条例的规定，尊重和保护玩家的合法权益，公正公平地执行管理职责。</li></ul><h2 id="第二章-管理员的职责和权利" tabindex="-1">第二章：管理员的职责和权利 <a class="header-anchor" href="#第二章-管理员的职责和权利" aria-label="Permalink to &quot;第二章：管理员的职责和权利&quot;">​</a></h2><ul><li>第 3 条：管理员有权对违反游戏规则的玩家进行警告、禁言、踢出、封禁等处罚。</li><li>第 4 条：管理员有责任定期巡查服务器，确保服务器运行正常，及时处理玩家反馈的问题。</li><li>第 5 条：管理员有权参与服务器的规划建设，提出改进建议。</li></ul><h2 id="第三章-管理员的行为规范" tabindex="-1">第三章：管理员的行为规范 <a class="header-anchor" href="#第三章-管理员的行为规范" aria-label="Permalink to &quot;第三章：管理员的行为规范&quot;">​</a></h2><ul><li>第 6 条：管理员不得滥用职权，对玩家进行无故的处罚。</li><li>第 7 条：管理员不得泄露玩家的个人信息。</li><li>第 8 条：管理员不得利用职务之便，为自己或他人谋取不正当利益。</li><li>第 9 条：管理员不得在游戏中进行任何形式的广告推广。</li></ul><h2 id="第四章-对违反条例的管理员的处理" tabindex="-1">第四章：对违反条例的管理员的处理 <a class="header-anchor" href="#第四章-对违反条例的管理员的处理" aria-label="Permalink to &quot;第四章：对违反条例的管理员的处理&quot;">​</a></h2><ul><li>第 10 条：对于违反本条例的管理员，将进行警告、撤销管理员权限、封禁账号等处罚。</li><li>第 11 条：对于严重违反本条例，造成恶劣影响的管理员，将进行永久封禁处理，并保留追究其法律责任的权利。</li></ul><h2 id="第五章-附则" tabindex="-1">第五章：附则 <a class="header-anchor" href="#第五章-附则" aria-label="Permalink to &quot;第五章：附则&quot;">​</a></h2><ul><li>第 12 条：本条例自发布之日起执行，如有未尽事宜，由高级管理解释。</li></ul><h2 id="客服工作职责" tabindex="-1">客服工作职责 <a class="header-anchor" href="#客服工作职责" aria-label="Permalink to &quot;客服工作职责&quot;">​</a></h2><ol><li><p><strong>玩家支持</strong>：</p><ul><li>通过在线聊天、QQ等方式，解答玩家在游戏过程中遇到的问题和疑问。</li><li>提供技术支持，指导玩家解决游戏安装、登录、连接等技术问题。</li><li>记录玩家的常见问题，编写FAQ文档，提升服务的效率。</li></ul></li><li><p><strong>问题解决</strong>：</p><ul><li>及时处理玩家的投诉和反馈，分析问题根源并提供有效的解决方案。</li><li>协调与技术团队的沟通，确保技术问题得到快速解决。</li><li>跟踪问题解决进度，确保玩家的问题得到彻底解决并反馈结果。</li></ul></li><li><p><strong>社区管理</strong>：</p><ul><li>维护服务器的和谐氛围，管理和监督游戏内外的玩家行为，确保遵守服务器规则。</li><li>处理玩家间的纠纷，调解争端，确保游戏环境的公平和友好。</li><li>定期巡查游戏服务器，发现并处理违规行为。</li></ul></li><li><p><strong>信息收集</strong>：</p><ul><li>收集玩家的建议和意见，整理并向管理团队反馈，以便优化游戏体验。</li><li>分析玩家反馈的数据，提出改进建议，协助提升服务器的服务质量。</li><li>参与玩家调查，了解玩家需求和满意度，制定改进计划。</li></ul></li></ol><h3 id="活动策划工作职责" tabindex="-1">活动策划工作职责 <a class="header-anchor" href="#活动策划工作职责" aria-label="Permalink to &quot;活动策划工作职责&quot;">​</a></h3><ol><li><p><strong>活动设计与策划</strong></p><ul><li>设计并策划各种有趣且具有挑战性的游戏活动，包括但不限于比赛、探险、建造比赛等。</li><li>确保活动具有创新性和可玩性，能够吸引不同类型的玩家参与。</li></ul></li><li><p><strong>活动实施与管理</strong></p><ul><li>制定详细的活动方案和时间表，确保活动按计划进行。</li><li>组织和协调活动的各个环节，确保活动顺利进行。</li><li>实时监控活动进展，及时解决活动过程中出现的问题。</li></ul></li><li><p><strong>玩家互动与反馈</strong></p><ul><li>积极与玩家互动，了解玩家需求和建议。</li><li>收集活动反馈，分析活动效果，不断优化和改进活动内容。</li></ul></li><li><p><strong>宣传与推广</strong></p><ul><li>制定活动宣传计划，通过服务器内公告、b站等渠道进行宣传。</li><li>制作活动宣传材料，如宣传图、视频等，吸引更多玩家参与。</li></ul></li><li><p><strong>数据分析与报告</strong></p><ul><li>记录和分析活动数据，评估活动效果。</li><li>定期撰写活动总结报告，提出改进建议。</li></ul></li></ol><h2 id="官网维护要求" tabindex="-1">官网维护要求 <a class="header-anchor" href="#官网维护要求" aria-label="Permalink to &quot;官网维护要求&quot;">​</a></h2><p>需要熟练掌握git与上传github的相关操作</p><p>需要熟练掌握markdown的编写方法</p><p>请熟读<a href="http://yizhan.wiki/NitWikit/writing" target="_blank" rel="noreferrer">Nitwikit编写规范</a>以编写官网的教程等内容</p><h2 id="服务器插件编写规范" tabindex="-1">服务器插件编写规范 <a class="header-anchor" href="#服务器插件编写规范" aria-label="Permalink to &quot;服务器插件编写规范&quot;">​</a></h2><h4 id="_1-编码规范" tabindex="-1">1. 编码规范 <a class="header-anchor" href="#_1-编码规范" aria-label="Permalink to &quot;1. 编码规范&quot;">​</a></h4><ul><li><p><strong>命名规范</strong>:</p><ul><li>类名使用大驼峰命名法（如 <code>MyPlugin</code>）。</li><li>方法名和变量名使用小驼峰命名法（如 <code>getPlayerName</code>）。</li><li>常量名使用全大写加下划线（如 <code>MAX_PLAYERS</code>）。</li></ul></li><li><p><strong>注释</strong>:</p><ul><li>类和方法必须有Javadoc注释。</li><li>复杂逻辑应有行内注释。</li></ul></li></ul><h4 id="_2-日志记录" tabindex="-1">2. 日志记录 <a class="header-anchor" href="#_2-日志记录" aria-label="Permalink to &quot;2. 日志记录&quot;">​</a></h4><ul><li>使用 <code>getLogger()</code>方法记录日志。<div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(”XX插件已加载“);</span></span></code></pre></div></li></ul><h4 id="_3-插件依赖" tabindex="-1">3. 插件依赖 <a class="header-anchor" href="#_3-插件依赖" aria-label="Permalink to &quot;3. 插件依赖&quot;">​</a></h4><ul><li>在 <code>plugin.yml</code>中声明插件依赖：<div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">depend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">依赖插件名称</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div></li></ul><h4 id="_4-测试与调试" tabindex="-1">4. 测试与调试 <a class="header-anchor" href="#_4-测试与调试" aria-label="Permalink to &quot;4. 测试与调试&quot;">​</a></h4><ul><li>在本地服务器上进行充分测试，确保插件无错误。</li><li>使用 <code>System.out.println</code>或日志记录进行调试。</li></ul><h4 id="_5-发布到github" tabindex="-1">5. 发布到GitHub <a class="header-anchor" href="#_5-发布到github" aria-label="Permalink to &quot;5. 发布到GitHub&quot;">​</a></h4><p>请使用使用GitHub Desktop发布（若会git可忽略）</p><p><em><strong>可能需要妙妙工具辅助上网</strong></em></p><ol><li><p><strong>创建GitHub仓库</strong>:</p><ul><li>登录GitHub并创建一个新的仓库。</li><li>初始化仓库时，可以选择添加README.md和.gitignore文件（选择Java模板）。</li></ul></li><li><p><strong>克隆仓库到本地</strong>:</p><ul><li>打开GitHub Desktop。</li><li>点击“File” &gt; “Clone repository”。</li><li>选择你刚刚创建的仓库并克隆到本地。</li></ul></li><li><p><strong>将项目文件添加到本地仓库</strong>:</p><ul><li>将你的插件项目文件复制到本地克隆的仓库目录中。</li></ul></li><li><p><strong>提交和推送代码</strong>:</p><ul><li>在GitHub Desktop中，添加所有更改。</li><li>输入提交信息（如“初次提交”）。</li><li>点击“Commit to main”。</li><li>点击“Push origin”将代码推送到GitHub远程仓库。</li></ul></li><li><p><strong>发布版本</strong>:</p><ul><li>在GitHub仓库页面，点击“Releases”选项卡。</li><li>点击“Draft a new release”按钮。</li><li>填写版本号（如 <code>v1.0.0</code>）、标题和描述。</li><li>上传通过Maven打包生成的插件JAR文件。</li><li>点击“Publish release”按钮发布新版本。</li></ul></li><li><p><strong>编写README文件</strong></p></li></ol><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;"># MyPlugin</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MyPlugin是一个用于岚域我的世界服务器的插件，提供了一些有用的功能。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">---</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">## 功能介绍</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 功能1：描述功能1的作用。</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 功能2：描述功能2的作用。</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 功能3：描述功能3的作用。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">## 安装</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">1.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 下载最新版本的插件JAR文件。</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">2.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 将JAR文件放入服务器的</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\`plugins\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">目录。</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">3.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 重启服务器。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">## 使用</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">### 命令</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">插件提供以下命令：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \`/mycommand\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> - 执行某个功能。</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;"> **用法**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\`/mycommand &lt;参数&gt;\`</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;"> **示例**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\`/mycommand example\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">### 权限</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">插件使用以下权限：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \`myplugin.use\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> - 允许使用插件的基本功能。</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;"> **默认**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 所有玩家</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \`myplugin.admin\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> - 允许使用管理员功能。</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;"> **默认**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 仅管理员</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">### 配置</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">插件支持以下配置选项：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\`\`\`yaml</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># config.yml</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">option1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">value1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">option2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">value2</span></span></code></pre></div><ol start="7"><li><strong>API编写规范</strong></li></ol><h4 id="_1-方法设计" tabindex="-1">1. 方法设计 <a class="header-anchor" href="#_1-方法设计" aria-label="Permalink to &quot;1. 方法设计&quot;">​</a></h4><ul><li><strong>方法签名</strong>: 方法名应清晰描述其功能，避免歧义。</li><li><strong>参数</strong>: 参数列表应尽量简洁，必要时使用对象封装多个参数。</li><li><strong>返回值</strong>: 返回值类型应明确，避免使用模糊类型（如 <code>Object</code>）。</li></ul><h4 id="_2-javadoc-注释" tabindex="-1">2. Javadoc 注释 <a class="header-anchor" href="#_2-javadoc-注释" aria-label="Permalink to &quot;2. Javadoc 注释&quot;">​</a></h4><p>每个API方法都应有详细的Javadoc注释，包含以下信息：</p><ul><li><strong>方法描述</strong>: 简要描述方法的功能。</li><li><strong>参数</strong>: 使用 <code>@param</code>标签描述每个参数。</li><li><strong>返回值</strong>: 使用 <code>@return</code>标签描述返回值。</li><li><strong>异常</strong>: 使用 <code>@throws</code>标签描述可能抛出的异常。</li></ul><p>示例：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 获取玩家的名称。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> playerId</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 玩家ID</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 玩家名称</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@throws</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PlayerNotFoundException</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 如果找不到该玩家</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPlayerName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String playerId) throws PlayerNotFoundException {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 方法实现</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="_3-异常处理" tabindex="-1">3. 异常处理 <a class="header-anchor" href="#_3-异常处理" aria-label="Permalink to &quot;3. 异常处理&quot;">​</a></h4><ul><li><strong>自定义异常</strong>: 对于特定错误情况，定义自定义异常类（如 <code>PlayerNotFoundException</code>）。</li><li><strong>抛出异常</strong>: 在方法签名中声明可能抛出的异常，并在方法内部适当位置抛出。</li></ul><p>示例：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PlayerNotFoundException</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Exception</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PlayerNotFoundException</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        super</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(message);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,45)]))}const c=s(t,[["render",h]]);export{g as __pageData,c as default};
